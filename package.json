{
  "name": "code-explorer",
  "displayName": "Code Explorer",
  "description": "Mark code call chain into a stack and switching among them.",
  "version": "0.4.1",
  "license": "MIT",
  "repository": {
    "url": "https://github.com/tianjianchn/code-explorer-vscode"
  },
  "engines": {
    "vscode": "^1.81.0"
  },
  "publisher": "tianjianchn",
  "categories": [
    "Other"
  ],
  "keywords": [
    "Code Explorer",
    "Bookmark",
    "Codemark",
    "Code Navigation",
    "Code Jumper",
    "Code Stack",
    "Code Chain",
    "Call Chain",
    "Call Stack",
    "Call Hierarchy",
    "Function Chain",
    "Read Code",
    "Code Tour"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "icon": "media/logo.png",
  "contributes": {
    "commands": [
      {
        "command": "codeExplorer.addMarker",
        "title": "Add Code Marker",
        "category": "Code Explorer"
      },
      {
        "command": "codeExplorer.selectMarker",
        "title": "Search and Open Marker",
        "category": "Code Explorer"
      },
      {
        "command": "codeExplorer.chooseWorkspaceFolder",
        "title": "Choose Workspace Folder",
        "category": "Code Explorer",
        "icon": "$(folder)",
        "enablement": "workspaceFolderCount > 1"
      },
      {
        "command": "codeExplorer.createStack",
        "title": "Create Stack",
        "category": "Code Explorer",
        "icon": "$(add)"
      },
      {
        "command": "codeExplorer.pasteCallStack",
        "title": "Paste Call Stack",
        "category": "Code Explorer",
        "icon": "$(files)"
      },
      {
        "command": "codeExplorer.activateStack",
        "title": "Activate Stack",
        "category": "Code Explorer",
        "icon": "$(arrow-swap)",
        "enablement": "view == codeExplorer.stackView"
      },
      {
        "command": "codeExplorer.renameStack",
        "title": "Rename Stack",
        "category": "Code Explorer",
        "enablement": "view == codeExplorer.stackView"
      },
      {
        "command": "codeExplorer.reverseMarkers",
        "title": "Reverse Markers",
        "category": "Code Explorer",
        "enablement": "view == codeExplorer.stackView"
      },
      {
        "command": "codeExplorer.copyMarkers",
        "title": "Copy Markers",
        "category": "Code Explorer",
        "enablement": "view == codeExplorer.stackView"
      },
      {
        "command": "codeExplorer.copyMarkersReversed",
        "title": "Copy Markers (Reversed)",
        "category": "Code Explorer",
        "enablement": "view == codeExplorer.stackView"
      },
      {
        "command": "codeExplorer.deleteStack",
        "title": "Delete Stack",
        "category": "Code Explorer",
        "icon": "$(trash)",
        "enablement": "view == codeExplorer.stackView"
      },
      {
        "command": "codeExplorer.stackView.openMarker",
        "title": "Open Marker",
        "category": "Code Explorer"
      },
      {
        "command": "codeExplorer.stackView.setMarkerTitle",
        "title": "Set Title",
        "category": "Code Explorer",
        "enablement": "view == codeExplorer.stackView"
      },
      {
        "command": "codeExplorer.stackView.setMarkerIcon",
        "title": "Set Icon",
        "category": "Code Explorer",
        "enablement": "view == codeExplorer.stackView"
      },
      {
        "command": "codeExplorer.stackView.addTag",
        "title": "Add a Tag",
        "category": "Code Explorer",
        "enablement": "view == codeExplorer.stackView"
      },
      {
        "command": "codeExplorer.stackView.deleteTag",
        "title": "Delete a Tag",
        "category": "Code Explorer",
        "enablement": "view == codeExplorer.stackView"
      },
      {
        "command": "codeExplorer.stackView.indentMarker",
        "title": "Indent",
        "category": "Code Explorer",
        "enablement": "view == codeExplorer.stackView"
      },
      {
        "command": "codeExplorer.stackView.unindentMarker",
        "title": "Unindent",
        "category": "Code Explorer",
        "enablement": "view == codeExplorer.stackView"
      },
      {
        "command": "codeExplorer.stackView.copyMarker",
        "title": "Copy",
        "category": "Code Explorer",
        "enablement": "view == codeExplorer.stackView"
      },
      {
        "command": "codeExplorer.stackView.deleteMarker",
        "title": "Delete",
        "category": "Code Explorer",
        "icon": "$(close)",
        "enablement": "view == codeExplorer.stackView"
      },
      {
        "command": "codeExplorer.refresh",
        "title": "Refresh Stacks",
        "category": "Code Explorer",
        "icon": "$(refresh)"
      },
      {
        "command": "codeExplorer.openDataFile",
        "title": "Open Data File (Edit carefully)",
        "category": "Code Explorer"
      },
      {
        "command": "codeExplorer.gutter.deleteMarker",
        "title": "Delete Code Marker",
        "category": "Code Explorer"
      },
      {
        "command": "codeExplorer.gutter.revealMarker",
        "title": "Reveal Code Marker",
        "category": "Code Explorer"
      }
    ],
    "viewsContainers": {
      "panel": [
        {
          "id": "codeExplorerPanel",
          "title": "Code Explorer",
          "icon": "media/logo.svg"
        }
      ]
    },
    "views": {
      "debug": [],
      "codeExplorerPanel": [
        {
          "id": "codeExplorer.stackView",
          "name": "Markers",
          "contextualTitle": "Code Explorer",
          "visibility": "visible"
        }
      ]
    },
    "menus": {
      "commandPalette": [
        {
          "command": "codeExplorer.stackView.openMarker",
          "when": "false"
        },
        {
          "command": "codeExplorer.gutter.deleteMarker",
          "when": "false"
        },
        {
          "command": "codeExplorer.gutter.revealMarker",
          "when": "false"
        }
      ],
      "editor/context": [
        {
          "command": "codeExplorer.addMarker",
          "group": "z_commands"
        }
      ],
      "editor/lineNumber/context": [
        {
          "command": "codeExplorer.addMarker",
          "when": "editorLineNumber not in codeExplorer.markerLines",
          "group": "codeExplorer"
        },
        {
          "command": "codeExplorer.gutter.revealMarker",
          "when": "editorLineNumber in codeExplorer.markerLines",
          "group": "codeExplorer"
        },
        {
          "command": "codeExplorer.gutter.deleteMarker",
          "when": "editorLineNumber in codeExplorer.markerLines",
          "group": "codeExplorer"
        }
      ],
      "view/title": [
        {
          "command": "codeExplorer.createStack",
          "when": "view == codeExplorer.stackView",
          "group": "navigation"
        },
        {
          "command": "codeExplorer.pasteCallStack",
          "when": "view == codeExplorer.stackView",
          "group": "navigation"
        },
        {
          "command": "codeExplorer.chooseWorkspaceFolder",
          "when": "view == codeExplorer.stackView && workspaceFolderCount > 1",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "codeExplorer.activateStack",
          "when": "view == codeExplorer.stackView && viewItem == stack",
          "group": "0"
        },
        {
          "command": "codeExplorer.renameStack",
          "when": "view == codeExplorer.stackView && viewItem == stack",
          "group": "1"
        },
        {
          "command": "codeExplorer.reverseMarkers",
          "when": "view == codeExplorer.stackView && viewItem == stack",
          "group": "2"
        },
        {
          "command": "codeExplorer.copyMarkers",
          "when": "view == codeExplorer.stackView && viewItem == stack",
          "group": "3"
        },
        {
          "command": "codeExplorer.copyMarkersReversed",
          "when": "view == codeExplorer.stackView && viewItem == stack",
          "group": "3"
        },
        {
          "command": "codeExplorer.deleteStack",
          "when": "view == codeExplorer.stackView && viewItem == stack",
          "group": "9"
        },
        {
          "command": "codeExplorer.stackView.deleteMarker",
          "when": "view == codeExplorer.stackView && viewItem == marker",
          "group": "inline"
        },
        {
          "command": "codeExplorer.stackView.setMarkerTitle",
          "when": "view == codeExplorer.stackView && viewItem == marker",
          "group": "0"
        },
        {
          "command": "codeExplorer.stackView.setMarkerIcon",
          "when": "view == codeExplorer.stackView && viewItem == marker",
          "group": "2"
        },
        {
          "command": "codeExplorer.stackView.addTag",
          "when": "view == codeExplorer.stackView && viewItem == marker",
          "group": "4"
        },
        {
          "command": "codeExplorer.stackView.deleteTag",
          "when": "view == codeExplorer.stackView && viewItem == marker",
          "group": "4"
        },
        {
          "command": "codeExplorer.stackView.indentMarker",
          "when": "view == codeExplorer.stackView && viewItem == marker",
          "group": "5"
        },
        {
          "command": "codeExplorer.stackView.unindentMarker",
          "when": "view == codeExplorer.stackView && viewItem == marker",
          "group": "5"
        },
        {
          "command": "codeExplorer.stackView.copyMarker",
          "when": "view == codeExplorer.stackView && viewItem == marker",
          "group": "7"
        },
        {
          "command": "codeExplorer.stackView.deleteMarker",
          "when": "view == codeExplorer.stackView && viewItem == marker",
          "group": "9"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "rimraf ./out && npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "10.0.6",
    "@types/node": "20.x",
    "@types/vscode": "1.81.0",
    "@typescript-eslint/eslint-plugin": "7.11.0",
    "@typescript-eslint/parser": "7.11.0",
    "@vscode/test-cli": "0.0.9",
    "@vscode/test-electron": "2.4.0",
    "eslint": "8.57.0",
    "rimraf": "5.0.7",
    "typescript": "5.4.5"
  }
}